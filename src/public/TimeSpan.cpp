#include "stdafx.h"
#include "TimeSpan.h"
#include <sstream>

using namespace std;

#ifndef _WIN32

#define SECOND_PERDAY 86400
#define SECOND_PERHOUR 3600

/*******************************************************************************
* 函数名称：	
* 功能描述：	构造函数
* 输入参数：	
* 输出参数：	
* 返 回 值：	
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-04	司文丽	      创建
*******************************************************************************/
CTimeSpan::CTimeSpan()
{
	m_nSeconds = 0;
	m_nDays =0;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	拷贝构造函书
* 输入参数：	timespan	:	用于拷贝的CTimeSpan变量
* 输出参数：	
* 返 回 值：	
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
CTimeSpan::CTimeSpan(const CTimeSpan &timespan)
{
	this->m_nDays = timespan.GetDays();
	this->m_nSeconds = timespan.GetTimeSpanSeconds();
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	构造函数
* 输入参数：	nSec			-- 时间间隔，单位秒
* 输出参数：	
* 返 回 值：	
* 其它说明：	
* 修改日期		修改人			修改内容
* ------------------------------------------------------------------------------
* 2010-05-27	司文丽	      	创建
*******************************************************************************/
CTimeSpan::CTimeSpan(const long nSec)
{
	m_nDays = nSec / 86400;
	m_nSeconds = nSec % 86400;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	构造函数
* 输入参数：	nDays	:	时间间隔的日计数
*				nSec	:	时间间隔的秒计数
* 输出参数：	
* 返 回 值：	
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
CTimeSpan::CTimeSpan(long nDays, long nSecs)
{
	m_nDays = nDays;
	m_nSeconds = nSecs;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	构造函数
* 输入参数：	lDays	:	时间间隔的日
*				nHours	:	时间间隔的时
*				nMins	:	时间间隔的分
*				nSecs	:	时间间隔的秒
* 输出参数：	无
* 返 回 值：	
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-04	司文丽	      创建
*******************************************************************************/
CTimeSpan::CTimeSpan(LONG lDays, int nHours, int nMins, int nSecs)
{
	m_nSeconds = 0;
	m_nDays = 0;
	_SetTimeSpan(lDays, nHours, nMins, nSecs);
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	析构函数
* 输入参数：	
* 输出参数：	
* 返 回 值：	
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-04	司文丽	      创建
*******************************************************************************/
CTimeSpan::~CTimeSpan()
{

}
/*******************************************************************************
* 函数名称：	
* 功能描述：	获取时间的日计数	
* 输入参数：	
* 输出参数：	
* 返 回 值：	日计数
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
long CTimeSpan::GetDays() const
{
	return m_nDays;	
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	获取时间的时计数	
* 输入参数：	
* 输出参数：	
* 返 回 值：	时计数
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
long CTimeSpan::GetHours() const
{
	long nHours = m_nSeconds / SECOND_PERHOUR;
	return nHours;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	获取时间间隔的总时数	
* 输入参数：	
* 输出参数：	
* 返 回 值：	总时数
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
long CTimeSpan::GetTotalHours() const
{
	long nHours = m_nDays * 24 + m_nSeconds / SECOND_PERHOUR;
	return nHours;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	获取时间的分计数	
* 输入参数：	
* 输出参数：	
* 返 回 值：	分计数
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
long CTimeSpan::GetMinutes() const
{
	long nSeconsMinusHour = m_nSeconds % SECOND_PERHOUR;
	long nMins = nSeconsMinusHour / 60;
	return nMins;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	获取时间间隔的总分数	
* 输入参数：	
* 输出参数：	
* 返 回 值：	总分数
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
long CTimeSpan::GetTotalMinutes() const
{
	long nMins = m_nSeconds / 60 + m_nDays * 24 * 60;
	return nMins;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	获取时间的秒计数
* 输入参数：	
* 输出参数：	
* 返 回 值：	秒计数
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
long CTimeSpan::GetSeconds() const
{
	long nSecs = m_nSeconds % 60;
	return nSecs;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	获取时间间隔的总秒数	
* 输入参数：	
* 输出参数：	
* 返 回 值：	总秒数
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
long CTimeSpan::GetTotalSeconds() const
{
	long nSecs = m_nDays * SECOND_PERDAY + m_nSeconds;
	return nSecs;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	==
* 输入参数：	timespan	:	进行比较的CTimeSpan变量
* 输出参数：	
* 返 回 值：	相等返回true，否则返回false
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
bool CTimeSpan::operator == (const CTimeSpan &timespan) const
{
	return !( *this < timespan || timespan < *this);
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	!=
* 输入参数：	timespan	:	进行比较的CTimeSpan变量
* 输出参数：	
* 返 回 值：	不相等返回true，否则返回false
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
bool CTimeSpan::operator !=(const CTimeSpan &timespan) const
{
	return ( *this < timespan || timespan < *this);	
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	<
* 输入参数：	timespan	:	进行比较的CTimeSpan变量
* 输出参数：	
* 返 回 值：	小于返回true，否则返回false
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
bool CTimeSpan::operator < (const CTimeSpan &timespan) const
{
	if(this->GetDays() < timespan.GetDays())
	{
		return true;
	}
	else if(this->GetDays() == timespan.GetDays()
		&& this->GetTimeSpanSeconds() < timespan.GetTimeSpanSeconds())
	{
		return true;
	}
	else
	{
		return false;
	}
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	>
* 输入参数：	timespan	:	进行比较的CTimeSpan变量
* 输出参数：	
* 返 回 值：	大于返回true，否则返回false
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
bool CTimeSpan::operator > (const CTimeSpan &timespan) const
{
	return (timespan < *this);
}
/*******************************************************************************
* 函数名称：	
* 功能描述：	<=
* 输入参数：	timespan	:	进行比较的CTimeSpan变量
* 输出参数：	
* 返 回 值：	小于相等返回true，否则返回false
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
bool CTimeSpan::operator <= (const CTimeSpan &timespan) const
{
	return !(timespan < *this);
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	>=
* 输入参数：	timespan	:	进行比较的CTimeSpan变量
* 输出参数：	
* 返 回 值：	大于相等返回true，否则返回false
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
bool CTimeSpan::operator >= (const CTimeSpan &timespan) const
{
	return !(*this < timespan);
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	=
* 输入参数：	timespan	:	用于赋值的CTimeSpan变量
* 输出参数：	
* 返 回 值：	
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-06	司文丽	      创建
*******************************************************************************/
CTimeSpan& CTimeSpan::operator = (const CTimeSpan &timespan)
{
	this->m_nDays = timespan.GetDays();
	this->m_nSeconds = timespan.GetTimeSpanSeconds();
	return *this;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	设置时间间隔
* 输入参数：	lDay	:	时间间隔的日值
*				nHours	:	时间间隔的时值
*				nMins	:	时间间隔的分值
*				nSecs	:	时间间隔的秒值
* 输出参数：	无
* 返 回 值：	执行成功返回TRUE，执行失败返回FALSE。
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-04	司文丽	      创建
*******************************************************************************/
BOOL CTimeSpan::_SetTimeSpan(LONG lDays, int nHours, int nMins, int nSecs)
{
	m_nDays = lDays;
	m_nSeconds = (long) nHours * SECOND_PERHOUR + (long) nMins * 60 + (long) nSecs;
	return TRUE;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	获取时间间隔
* 输出参数：	nDay	:	天
*				nHour	:	时
*				nMin	:	分
*				nSec	:	秒
* 输出参数：	
* 返 回 值：	
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2010-09-26 	白福铭	      创建
*******************************************************************************/
BOOL CTimeSpan::_GetTimeSpan(int &nDay, int &nHour, int &nMin, int &nSec) const
{
	nDay = 0;
	nHour = 0;
	nMin = 0;
	nSec = 0;

	nDay = m_nDays;

	int nOffset = (int)m_nSeconds;

	nHour = nOffset / SECOND_PERHOUR;
	nOffset -= nHour * SECOND_PERHOUR;

	nMin = nOffset / 60;
	nOffset -= nMin * 60;

	nSec = nOffset;

	return TRUE;    
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	根据格式字符获取格式值
* 输入参数：	cFormat	:	根据格式字符获取相应的值字符串
* 输出参数：	
* 返 回 值：	返回对应的值字符串
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2010-09-26 	白福铭	      创建
*******************************************************************************/
std::string CTimeSpan::_GetValue(char cFormat) const
{
	std::string strValue(1, cFormat);

	int nDay, nHour, nMin, nSec;
	string strDay, strHour, strMin, strSec;

	_GetTimeSpan(nDay, nHour, nMin, nSec);

	stringstream ss;

	ss << nDay;
	ss >> strDay;
	ss.clear();

	ss << nHour;
	ss >> strHour;
	if(strHour.length() == 1)
	{
		strHour.insert(0, "0");
	}
	ss.clear();

	ss << nMin;
	ss >> strMin;
	if(strMin.length() == 1)
	{
		strMin.insert(0, "0");
	}
	ss.clear();

	ss << nSec;
	ss >> strSec;
	if(strSec.length() == 1)
	{
		strSec.insert(0, "0");
	}
	ss.clear();

	switch(cFormat)
	{
	case 'd'://天数
		strValue = strDay;
		break;
	case 'H'://小时：00-23
		strValue = strHour;
		break;
	case 'M'://分钟：00-59
		strValue = strMin;
		break;
	case 'S'://秒：00-59
		strValue = strSec;
		break;
	default:
		break;		
	}

	return strValue;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	设置时间间隔	
* 输入参数：	nDays		:	时间间隔的日计数
*				nSeconse	:	时间间隔的日计数
* 输出参数：	
* 返 回 值：	执行成功返回TRUE，执行失败返回FALSE。
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-05	司文丽	      创建
*******************************************************************************/
BOOL CTimeSpan::SetTimeSpan(long nDays, long nSeconds)
{
	m_nDays = nDays;
	m_nSeconds = nSeconds;
	return TRUE;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	时间格式化为字符串
* 输入参数：	pszFormat	:	格式化字符串
* 输出参数：	
* 返 回 值：	返回求值后的字符串
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2010-09-26 	白福铭	      创建
*******************************************************************************/
CString CTimeSpan::Format( LPCSTR pszFormat) const
{
	string   strFormat   =  (string) pszFormat;   
	string   strObject   =   "%"; 

	int nLen = strFormat.length();	
	int nIndex;
	nIndex = strFormat.find(strObject);
	while( nIndex != -1 && nIndex + 1 < nLen)
	{
		char cFormat = strFormat[nIndex + 1];

		string strValue = _GetValue(cFormat);
		if(!strValue.empty())
		{
			strFormat.replace(nIndex, 2, strValue);
		}		

		nIndex = strFormat.find(strObject, nIndex + 1);
		nLen = strFormat.length();
	}
	LPCSTR szResult = strFormat.c_str();
	CString strResult(szResult);

	return strResult;
}

/*******************************************************************************
* 函数名称：	
* 功能描述：	获取时间间隔的秒计数	
* 输入参数：	
* 输出参数：	
* 返 回 值：	秒计数
* 其它说明：	
* 修改日期		修改人	      修改内容
* ------------------------------------------------------------------------------
* 2007-12-04	司文丽	      创建
*******************************************************************************/
long CTimeSpan::GetTimeSpanSeconds() const
{
	return m_nSeconds;
}

#endif		// end of _WIN32
